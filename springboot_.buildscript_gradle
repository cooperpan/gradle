buildscript {
    repositories {
        maven { url "http://nexus.xgeeklab.com/nexus/content/repositories/central/" }
        //mavenCentral()
        //maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE'
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
	maven { url "http://nexus.xgeeklab.com/nexus/content/repositories/central/" }
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    //maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    //mavenCentral()
}

apply plugin: 'java'
// apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'docker'
apply plugin: 'application'

dependencyManagement {
     imports {
          mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR7"   
          mavenBom 'org.springframework.cloud:spring-cloud-bus:1.3.2.BUILD-SNAPSHOT'
     }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations { all*.exclude module: 'slf4j-log4j12' }

dependencies {

    // shuame-cloud 依赖
    compile('org.springframework.cloud:spring-cloud-config-server:1.3.2.RELEASE')
    compile ('org.springframework.cloud:spring-cloud-starter-bus-amqp:1.3.1.RELEASE')

    // common 库依赖
    compile (
            'org.slf4j:slf4j-api:1.7.6',    
            'org.apache.httpcomponents:httpclient:4.5.3',            
            'org.apache.httpcomponents:fluent-hc:4.5.3',
            'commons-io:commons-io:2.5'
            )

    // Spring Boot
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // compile("org.springframework.boot:spring-boot-admin-starter-client")
    compile ('org.springframework.cloud:spring-cloud-starter-feign')
    compile ('io.github.openfeign.form:feign-form-spring:2.2.1')

    // WebSocket
    compile("org.springframework.boot:spring-boot-starter-websocket")
    
    // file uploader
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    // database
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-data-rest')

    compile('org.springframework.boot:spring-boot-starter-data-redis:1.5.4.RELEASE')

    // Spring Security
    compile("org.springframework.boot:spring-boot-starter-security")
    
    // https://mvnrepository.com/artifact/org.aspectj/aspectjrt
	compile("org.aspectj:aspectjrt:1.8.9")
    

    // Java JWT
    compile("io.jsonwebtoken:jjwt:0.7.0")

    // lombok 简化POJO
    compileOnly('org.projectlombok:lombok')

    compile('org.apache.commons:commons-lang3:3.5')

    compile('com.alibaba:fastjson:1.2.27')

    // 腾讯云短信依赖 https://mvnrepository.com/artifact/org.json/json
    compile('org.json:json:20170516')

    // 腾讯云对象存储
    compile('com.qcloud:cos_api:4.4')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation('com.google.guava:guava:20.0')
	
    // Use JUnit test framework
    testImplementation('junit:junit:4.12')

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    //    testImplementation("org.springframework.security:spring-security-test")
}
